【共通で実装する機能】
基本的に、上記の完成アプリケーションと同じ状態にしてください。
〇：ページごとのURL
〇：ページ上の各種リンク
〇：前回のアプリBookersとは別に、新しいアプリケーションを作成してください。
〇：投稿データのモデル名は、Bookにしてください。
〇：ユーザーに関するモデル名は、Userとしてください。
〇：ルートパスを設定してください。
〇：ルーティングは、resourcesを使ってください。
〇：投稿や更新が成功したときは、サクセスメッセージが表示されるようにしてください
〇：サクセスメッセージには、「successfully」の言葉が含まれるようにしてください。
〇：エラーメッセージには、「error」の言葉が含まれるようにしてください。
〇：ログイン済み／ログイン前の状態によって、ヘッダーの内容が変わるようにしてください。
〇：ログイン済みの場合は、以下のリンクがヘッダーに表示されるように設定してください。
〇：Home
〇：Users
〇：Books
〇：logout　
〇：ログインしていない場合は、ヘッダーに以下のリンクが表示されるように設定してください。
〇：Home
〇：About
〇：sign up
〇：login

【Userに実装する機能】
〇：カラム名は、以下のように設定してください。
〇：name：名前　　
〇：introduction：自己紹介文
〇：profile_image_id：「refile」による画像保存用
〇：ユーザー名・メール・パスワードで、ユーザーの新規登録ができるようにしてください。
〇：ユーザー名は、2〜20文字の範囲で設定してください。
〇：ユーザー名が空欄や20文字を超える場合、エラーメッセージが表示されるように設定してください。
〇：ログイン機能には、「devise」を使用してください。
〇：ユーザー名とパスワードで、ログインできるようにしてください。
〇：画像投稿には、「refile」を使用してください。
〇：自分のプロフィールは、以下の内容を追加登録や編集できるように設定してください。
　〇：名前
　〇：画像（写真を登録できるようにしてください。登録していない場合は、任意のNoImageを表示させてください）
　〇：自己紹介文
　〇：自己紹介文は、最大50文字までに設定してください。
　〇：自己紹介文が50文字を超えた場合は、エラーメッセージが表示されるように設定してください。

【Bookに実装する機能】
〇：カラム名は、以下のように設定してください。
　〇：title：本のタイトル
　〇：body：感想
〇：タイトル・感想文が空欄の場合や、〇：感想文が200文字以上の場合には、エラーメッセージを表示させてください。
〇：新規投稿や更新後は、本の詳細画面に遷移するように設定してください。
〇：一覧画面や詳細画面から新規投稿ができるように設定してください。
〇：本の感想は、投稿者のみが編集や削除ができるように設定してください。
〇：URLを入力しても、他の投稿者が投稿した編集画面には遷移できないように設定してください。

【レイアウト／デザインに関する設定】
〇：デザインは、「Bootstrap」を使用してください。
〇：Bootstrapを使って、以下のものを適用してください。　　　　　
〇：アイコン
〇：ヘッダーのデザイン
〇：テーブルのデザイン
〇：「グリッドシステム」を使ってレイアウトをしてください。
〇：今回は、レスポンシブ対応は特に指定しなくてかまいません。

vagrant@ubuntu-bionic:/vagrant/Bookers2$ bundle exec rspec spec/ --format documentation
2019-11-25 05:51:06 WARN Selenium [DEPRECATION] Selenium::WebDriver::Chrome#driver_path= is deprecated. Use Selenium::WebDriver::Chrome::Service#driver_path= instead.

Book モデルに関するテスト
  アソシエーション
    Userモデルに属している
  実際に保存してみる
    保存できる場合
      user_idを入れて保存
    保存できない場合
      user_idを保存していない
      titleが空欄
      bodyが空欄
      bodyが201文字以上

User モデルに関するテスト
  アソシエーション
    Bookモデルを多数持っている
  実際に保存してみる
    保存できる場合
      画像データなし
      画像データあり
    保存できない場合
      nameが空欄
      nameが１文以下
      nameが21文字以上
      introductionが51文字以上

Homeページ、サインアップ、ログイン、ログアウトに関するテスト
  サインアップの確認
    正しくサインアップできているか
    リダイレクト先は正しいか
    サクセスメッセージは正しく表示されるか
  有効でない内容でのサインアップの確認
    リダイレクト先は正しいか
    エラーメッセージは正しく表示されるか
  ログインの確認
    正しくログインして、リダイレクトされているか
    サクセスメッセージは正しく表示されるか
  有効でない内容でのログインの確認
    リダイレクト先は正しいか
  ログアウトの確認
    正しくログアウトして、リダイレクトされているか
    サクセスメッセージは正しく表示されるか
  ヘッダーのリンクの確認
    ログイン時
    ログアウト時

Bookに関するテスト
  ログインしていない状態で
    以下のページへアクセスした際のリダイレクト先の確認
      bookの一覧ページ
      bookの詳細ページ
      bookの編集ページ
  ログインした状態で
    表示内容とリンクの確認
      bookの一覧ページの表示内容とリンクは正しいか
      bookの一覧ページでtableタグを使用しているか
      自分のbookの詳細ページでの表示内容とリンクは正しいか
      他人のbookの詳細ページでの表示内容とリンクは正しいか
    マイページからbookを投稿
      正しく保存できているか
      リダイレクト先は正しいか
      サクセスメッセージが表示されるか
    book一覧ページからbookを投稿
      正しく保存できているか
    有効ではない内容のbookを投稿
      保存されないか
      リダイレクト先は正しいか
      エラーメッセージが表示されるか
    自分が投稿したbookの更新
      bookが更新されているか
      リダイレクト先は正しいか
      サクセスメッセージが表示されるか
    他人が投稿したbookの更新
      編集ページへアクセスできず、book一覧ページにリダイレクトされるか
    有効ではない内容のbookの更新
      リダイレクト先は正しいか
      エラーメッセージが表示されるか
    bookの削除
      bookが削除されているか
      リダイレクト先が正しいか

Userに関するテスト
  ログインしていない状態で
    以下のページへアクセスした際のリダイレクト先の確認
      userの一覧ページ
      userの詳細ページ
      userの編集ページ
  ログインした状態で
    表示内容とリンクの確認
      userの一覧ページの表示内容とリンク
      userの一覧ページでtableタグを使用しているか
      自分の詳細ページの表示内容とリンク
      自分の詳細ページでno-imageの画像が表示されているか
      他人の詳細ページの表示内容とリンク
    自分のプロフィールの更新
      userが更新されているか
      リダイレクト先は正しいか
      サクセスメッセージが表示されるか
    他人のプロフィールの更新
      ページへアクセスできず、マイページにリダイレクトされるか
    有効ではない内容のuserの更新
      リダイレクト先が正しいか
      エラーメッセージが表示されるか

Finished in 16.96 seconds (files took 3.32 seconds to load)
61 examples, 0 failures